/*using io;
using containers;

function sieve(n){
	var ret = new Vector();
	var mask = [1] * (n+1);
	
	for(var i = 2; i <= n; ++i){
		if(mask[i]){
			ret.push_back(i);
			for(var j = i*i; j <= n;  j += i){
				mask[j] = 0;
			}
		}
	}
	return ret;
}


var v = sieve(1000000);
*/
/*
using gui;
using io;


function onChar(str){
	console.writeln(str);
}

class Functor{
	function opCall(str){
		console.writeln("Functor: " .. str);
	}
};


var f = new Functor();
f("aaa");

var wnd = new Window(1024, 768);

wnd.setOnChar(f);

wnd.loop();*/


using io;
using functional;

class C{
	var str;
	C(str){
		this.str = str;
	}
	function f(str, str2){
		console.writeln(this.str..","..str..str2);
	}
};

var c = new C("abcd");

C::f(c, "sedam");

c.C::f("aaa");

var f = bind(C::f, c, "hah", _[1]);

f("jedan", "dva");